What is XML?	A language to exchange data.<div><br></div><div>We need the syntax and the data model, but xml needs a unique way to give an interpretation (meaning_ to this data</div>
What does semantics mean?	"Clarifies the meaning, specifies assumptions and allows deductions.<div><br></div><div>Deductions such as ""my son is a homosapian""</div>"
What kind of relationships can we model with rdf?	WE can not do one to many, only binary relationships where the relationship only has 2 entities involved.
What is reificaation?	We need to be able to refer to a statement using an identifier, rdf allows us to do this using reification.xx
Does RDF allow us to make high order statements?	"Yes, we can make statements about other rdf statements such as ""Ralph believes that the web contains one billion documents"""
Why is XML not the answer for adding meaning to a document?	Intuitively unclear. Semantic tags re domain terms. No unique way to express the same information.<div><br></div><div>No commitment on domain specific ontological volcabuary.</div>
What does RDF stand for?	Resource Description Framework
What is SPARQL?	Query language for querying RDF
What is a resource?	Anything we can identify&nbsp;
What is an URI?	A name to identify something
What is a resources property?	Something about that resource, such as name.
Is the name of a property a URI?	Yes
Mus: Shoegazing refs:subClassOf mus: Alternative rock<div>Mus: Alternative Rock rtfs:subClassOf mus: Music_genre</div><div><br></div><div>What can we derive?</div>	mus: Shoegazing refs: subClassOf mus: Music_genre
What is the transitive property?	X is a subclass of Y, Y is a subclass of Z.<div><br></div><div>Therefore X is a subclass of Z.</div>
"What are the sub graphs of:<div>Ex1:JohnURI ex1:hasName ex1:johnfullname</div><div>&nbsp; &nbsp; Ex1:johnfullname ex1:firstName ""John""</div><div>&nbsp; &nbsp; Ex1:johnfullname ex1:surname ""John""</div>"	"Ex1:johnURI ex1:hasName ex1:johnfullname<div><br></div><div>Ex1:johnURI ex1:hasName ex1:johnfullname<br></div><div>&nbsp; &nbsp; Ex1:johnfullname ex:firstName ""John""</div><div><br></div><div>Ex1:johnURI ex1:hasName ex1:johnfullname<br></div><div>&nbsp; &nbsp; Ex1:johnfullname ex:firstName ""John""<br></div><div>&nbsp; &nbsp; &nbsp; &nbsp;Ex1:johnfullname ex:surname ""John""</div>"
What is simple entailment?	No particular extra conditions are posed on a vocabulary, including the RDF itself.
What is the deduction rule in RDF?	If the triple &lt;u, a, x&gt; is valid, the we can entail that the triple &lt;u, a, _:n&gt; is valid.<div><br></div><div>Where _:n is the ID of a blank node.</div><div><br></div><div>If the triple &lt;u, a, x&gt; is valid, then we can entail that the triple &lt;_:n, a, x&gt; is valid.</div>
<b>Simple Entailment First Rule</b><div><b>If you have an&nbsp;</b>object, you can derive a&nbsp;blank node for that object, as long as the&nbsp;subject and&nbsp;<span class=cloze>[...]</span> stay the same.</div><div><br></div><div>&lt;u a x&gt; -&gt; &lt;u a _:n&gt;<br></div>	<b>Simple Entailment First Rule</b><div><b>If you have an&nbsp;</b>object, you can derive a&nbsp;blank node for that object, as long as the&nbsp;subject and&nbsp;<span class=cloze>predicate</span> stay the same.</div><div><br></div><div>&lt;u a x&gt; -&gt; &lt;u a _:n&gt;<br></div><br> 
<b>Simple Entailment First Rule</b><div><b>If you have an&nbsp;</b>object, you can derive a&nbsp;<span class=cloze>[...]</span>, as long as the&nbsp;subject and&nbsp;predicate stay the same.</div><div><br></div><div>&lt;u a x&gt; -&gt; &lt;u a _:n&gt;<br></div>	<b>Simple Entailment First Rule</b><div><b>If you have an&nbsp;</b>object, you can derive a&nbsp;<span class=cloze>blank node for that object</span>, as long as the&nbsp;subject and&nbsp;predicate stay the same.</div><div><br></div><div>&lt;u a x&gt; -&gt; &lt;u a _:n&gt;<br></div><br> 
<b>Simple Entailment First Rule</b><div><b>If you have an&nbsp;</b>object, you can derive a&nbsp;blank node for that object, as long as the&nbsp;<span class=cloze>[...]</span> and&nbsp;predicate stay the same.</div><div><br></div><div>&lt;u a x&gt; -&gt; &lt;u a _:n&gt;<br></div>	<b>Simple Entailment First Rule</b><div><b>If you have an&nbsp;</b>object, you can derive a&nbsp;blank node for that object, as long as the&nbsp;<span class=cloze>subject</span> and&nbsp;predicate stay the same.</div><div><br></div><div>&lt;u a x&gt; -&gt; &lt;u a _:n&gt;<br></div><br> 
<b>Simple Entailment First Rule</b><div><b>If you have an&nbsp;</b><span class=cloze>[...]</span>, you can derive a&nbsp;blank node for that object, as long as the&nbsp;subject and&nbsp;predicate stay the same.</div><div><br></div><div>&lt;u a x&gt; -&gt; &lt;u a _:n&gt;<br></div>	<b>Simple Entailment First Rule</b><div><b>If you have an&nbsp;</b><span class=cloze>object</span>, you can derive a&nbsp;blank node for that object, as long as the&nbsp;subject and&nbsp;predicate stay the same.</div><div><br></div><div>&lt;u a x&gt; -&gt; &lt;u a _:n&gt;<br></div><br> 
<b>Simple Entailment Rule 2</b><div>If you have a&nbsp;subject you can derive a&nbsp;blank node for that subject as long as the&nbsp;object and&nbsp;<span class=cloze>[...]</span> stay the same.</div><div>&lt;u a x&gt; -&gt; &lt;_:n a x&gt;<br></div>	<b>Simple Entailment Rule 2</b><div>If you have a&nbsp;subject you can derive a&nbsp;blank node for that subject as long as the&nbsp;object and&nbsp;<span class=cloze>predicate</span> stay the same.</div><div>&lt;u a x&gt; -&gt; &lt;_:n a x&gt;<br></div><br> 
<b>Simple Entailment Rule 2</b><div>If you have a&nbsp;subject you can derive a&nbsp;<span class=cloze>[...]</span> as long as the&nbsp;object and&nbsp;predicate stay the same.</div><div>&lt;u a x&gt; -&gt; &lt;_:n a x&gt;<br></div>	<b>Simple Entailment Rule 2</b><div>If you have a&nbsp;subject you can derive a&nbsp;<span class=cloze>blank node for that subject</span> as long as the&nbsp;object and&nbsp;predicate stay the same.</div><div>&lt;u a x&gt; -&gt; &lt;_:n a x&gt;<br></div><br> 
<b>Simple Entailment Rule 2</b><div>If you have a&nbsp;subject you can derive a&nbsp;blank node for that subject as long as the&nbsp;object and&nbsp;predicate stay the same.</div><div><span class=cloze>[...]</span><br></div>	<b>Simple Entailment Rule 2</b><div>If you have a&nbsp;subject you can derive a&nbsp;blank node for that subject as long as the&nbsp;object and&nbsp;predicate stay the same.</div><div><span class=cloze>&lt;u a x&gt; -&gt; &lt;_:n a x&gt;</span><br></div><br> 
<b>Simple Entailment Rule 2</b><div>If you have a&nbsp;subject you can derive a&nbsp;blank node for that subject as long as the&nbsp;<span class=cloze>[...]</span> and&nbsp;predicate stay the same.</div><div>&lt;u a x&gt; -&gt; &lt;_:n a x&gt;<br></div>	<b>Simple Entailment Rule 2</b><div>If you have a&nbsp;subject you can derive a&nbsp;blank node for that subject as long as the&nbsp;<span class=cloze>object</span> and&nbsp;predicate stay the same.</div><div>&lt;u a x&gt; -&gt; &lt;_:n a x&gt;<br></div><br> 
<b>Simple Entailment Rule 2</b><div>If you have a&nbsp;<span class=cloze>[...]</span> you can derive a&nbsp;blank node for that subject as long as the&nbsp;object and&nbsp;predicate stay the same.</div><div>&lt;u a x&gt; -&gt; &lt;_:n a x&gt;<br></div>	<b>Simple Entailment Rule 2</b><div>If you have a&nbsp;<span class=cloze>subject</span> you can derive a&nbsp;blank node for that subject as long as the&nbsp;object and&nbsp;predicate stay the same.</div><div>&lt;u a x&gt; -&gt; &lt;_:n a x&gt;<br></div><br> 
<b>Simple Entailment First Rule</b><div><b>If you have an&nbsp;</b>object, you can derive a&nbsp;blank node for that object, as long as the&nbsp;subject and&nbsp;predicate stay the same.</div><div><br></div><div><span class=cloze>[...]</span><br></div>	<b>Simple Entailment First Rule</b><div><b>If you have an&nbsp;</b>object, you can derive a&nbsp;blank node for that object, as long as the&nbsp;subject and&nbsp;predicate stay the same.</div><div><br></div><div><span class=cloze>&lt;u a x&gt; -&gt; &lt;u a _:n&gt;</span><br></div><br> 
<b>Simple Entailment Deduction Rules</b><div>A graph G1&nbsp;simply entails a graph G2 if&nbsp;G1 can be extended to a graph G'1 by&nbsp;virtue of the rules se1 and se2 such that&nbsp;<span class=cloze>[...]</span></div><div><br></div><div>\[G2 /IN G'1\]<br></div>	<b>Simple Entailment Deduction Rules</b><div>A graph G1&nbsp;simply entails a graph G2 if&nbsp;G1 can be extended to a graph G'1 by&nbsp;virtue of the rules se1 and se2 such that&nbsp;<span class=cloze>G2 is contained in G'1</span></div><div><br></div><div>\[G2 /IN G'1\]<br></div><br> 
<b>Simple Entailment Deduction Rules</b><div>A graph G1&nbsp;simply entails a graph G2 if&nbsp;<span class=cloze>[...]</span> by&nbsp;virtue of the rules se1 and se2 such that&nbsp;G2 is contained in G'1</div><div><br></div><div>\[G2 /IN G'1\]<br></div>	<b>Simple Entailment Deduction Rules</b><div>A graph G1&nbsp;simply entails a graph G2 if&nbsp;<span class=cloze>G1 can be extended to a graph G'1</span> by&nbsp;virtue of the rules se1 and se2 such that&nbsp;G2 is contained in G'1</div><div><br></div><div>\[G2 /IN G'1\]<br></div><br> 
<b>Simple Entailment Deduction Rules</b><div>A graph G1&nbsp;simply entails a graph G2 if&nbsp;G1 can be extended to a graph G'1 by&nbsp;<span class=cloze>[...]</span> such that&nbsp;G2 is contained in G'1</div><div><br></div><div>\[G2 /IN G'1\]<br></div>	<b>Simple Entailment Deduction Rules</b><div>A graph G1&nbsp;simply entails a graph G2 if&nbsp;G1 can be extended to a graph G'1 by&nbsp;<span class=cloze>virtue of the rules se1 and se2</span> such that&nbsp;G2 is contained in G'1</div><div><br></div><div>\[G2 /IN G'1\]<br></div><br> 
<b>Simple Entailment Deduction Rules</b><div>A graph G1&nbsp;<span class=cloze>[...]</span> if&nbsp;G1 can be extended to a graph G'1 by&nbsp;virtue of the rules se1 and se2 such that&nbsp;G2 is contained in G'1</div><div><br></div><div>\[G2 /IN G'1\]<br></div>	<b>Simple Entailment Deduction Rules</b><div>A graph G1&nbsp;<span class=cloze>simply entails a graph G2</span> if&nbsp;G1 can be extended to a graph G'1 by&nbsp;virtue of the rules se1 and se2 such that&nbsp;G2 is contained in G'1</div><div><br></div><div>\[G2 /IN G'1\]<br></div><br> 
Does se1 and se2 weaken the subject and the object of the triples they are applied?	Yes!<div><br></div><div>Ex1:john ex1:hasWife ex1:Mary</div><div><br></div><div>We derive that:</div><div>_:n ex1:hasWife ex1:Mary</div>
How do we safely apply se1 and se2 without weakening the object?	If the blank node _:n was not already present in the graph.<div><br></div><div>If _:n was introduced, the rules only be used to assign _:n with the same resource that which it was originally assigned</div><div><br></div><div><br></div>
What is an inference rule?	We can derive a new sentence from sentences In the language.
In RDF, what is an inference corresponding to entailments described as?	Valid or Correct
When is an inference mechanism sound?	"When it derives only sentences that are entailed.<div><img src=""3BE51345-11E4-4117-96EE-D8377DDF9BD4.jpg""><br></div>"
When is an inference mechanism complete?	"If it derives all the sentences that are entailed.<div><img src=""C83174CF-5D8E-40FA-9413-AA4AD6CFA364.jpg""><br></div>"
<div>Advantages of RDF?<br></div><div><span class=cloze>[...]</span><br></div>	<div>Advantages of RDF?<br></div><div><span class=cloze>Very efficient deduction / querying</span><br></div><br> 
Disadvantages of RDF?<div>*&nbsp;<span class=cloze>[...]</span></div><div>*&nbsp;{{c2::We need more expressive notions, no person can be male and female at the same time. }</div>	Disadvantages of RDF?<div>*&nbsp;<span class=cloze>Very poor expressively (describe data in terms of triples)</span></div><div>*&nbsp;{{c2::We need more expressive notions, no person can be male and female at the same time. }</div><br> 
Name some things we can model with RDFS:<div>*&nbsp;Classes</div><div>*&nbsp;Class hierarchies</div><div>*&nbsp;Properties</div><div>*&nbsp;<span class=cloze>[...]</span></div><div>*&nbsp;Domain and range declarations</div>	Name some things we can model with RDFS:<div>*&nbsp;Classes</div><div>*&nbsp;Class hierarchies</div><div>*&nbsp;Properties</div><div>*&nbsp;<span class=cloze>Property Hierarchies</span></div><div>*&nbsp;Domain and range declarations</div><br> 
Name some things we can model with RDFS:<div>*&nbsp;Classes</div><div>*&nbsp;<span class=cloze>[...]</span></div><div>*&nbsp;Properties</div><div>*&nbsp;Property Hierarchies</div><div>*&nbsp;Domain and range declarations</div>	Name some things we can model with RDFS:<div>*&nbsp;Classes</div><div>*&nbsp;<span class=cloze>Class hierarchies</span></div><div>*&nbsp;Properties</div><div>*&nbsp;Property Hierarchies</div><div>*&nbsp;Domain and range declarations</div><br> 
Name some things we can model with RDFS:<div>*&nbsp;Classes</div><div>*&nbsp;Class hierarchies</div><div>*&nbsp;Properties</div><div>*&nbsp;Property Hierarchies</div><div>*&nbsp;<span class=cloze>[...]</span></div>	Name some things we can model with RDFS:<div>*&nbsp;Classes</div><div>*&nbsp;Class hierarchies</div><div>*&nbsp;Properties</div><div>*&nbsp;Property Hierarchies</div><div>*&nbsp;<span class=cloze>Domain and range declarations</span></div><br> 
Name some things we can model with RDFS:<div>*&nbsp;Classes</div><div>*&nbsp;Class hierarchies</div><div>*&nbsp;<span class=cloze>[...]</span></div><div>*&nbsp;Property Hierarchies</div><div>*&nbsp;Domain and range declarations</div>	Name some things we can model with RDFS:<div>*&nbsp;Classes</div><div>*&nbsp;Class hierarchies</div><div>*&nbsp;<span class=cloze>Properties</span></div><div>*&nbsp;Property Hierarchies</div><div>*&nbsp;Domain and range declarations</div><br> 
Name some things we can model with RDFS:<div>*&nbsp;<span class=cloze>[...]</span></div><div>*&nbsp;Class hierarchies</div><div>*&nbsp;Properties</div><div>*&nbsp;Property Hierarchies</div><div>*&nbsp;Domain and range declarations</div>	Name some things we can model with RDFS:<div>*&nbsp;<span class=cloze>Classes</span></div><div>*&nbsp;Class hierarchies</div><div>*&nbsp;Properties</div><div>*&nbsp;Property Hierarchies</div><div>*&nbsp;Domain and range declarations</div><br> 
Name things that RDFS does not represent:<div>*&nbsp;<span class=cloze>[...]</span></div><div>*&nbsp;Disjointness of Classes</div><div>*&nbsp;Local scope of properties</div><div>*&nbsp;{{c4::Complex Concept Definitions}</div><div>}</div>	Name things that RDFS does not represent:<div>*&nbsp;<span class=cloze>Property Characteristics (inverse, transitive)</span></div><div>*&nbsp;Disjointness of Classes</div><div>*&nbsp;Local scope of properties</div><div>*&nbsp;{{c4::Complex Concept Definitions}</div><div>}</div><br> 
Name things that RDFS does not represent:<div>*&nbsp;Property Characteristics (inverse, transitive)</div><div>*&nbsp;<span class=cloze>[...]</span></div><div>*&nbsp;Local scope of properties</div><div>*&nbsp;{{c4::Complex Concept Definitions}</div><div>}</div>	Name things that RDFS does not represent:<div>*&nbsp;Property Characteristics (inverse, transitive)</div><div>*&nbsp;<span class=cloze>Disjointness of Classes</span></div><div>*&nbsp;Local scope of properties</div><div>*&nbsp;{{c4::Complex Concept Definitions}</div><div>}</div><br> 
Name things that RDFS does not represent:<div>*&nbsp;Property Characteristics (inverse, transitive)</div><div>*&nbsp;Disjointness of Classes</div><div>*&nbsp;<span class=cloze>[...]</span></div><div>*&nbsp;{{c4::Complex Concept Definitions}</div><div>}</div>	Name things that RDFS does not represent:<div>*&nbsp;Property Characteristics (inverse, transitive)</div><div>*&nbsp;Disjointness of Classes</div><div>*&nbsp;<span class=cloze>Local scope of properties</span></div><div>*&nbsp;{{c4::Complex Concept Definitions}</div><div>}</div><br> 
What is OWL?	"What is ""{language} extends RDF schema to a knowledge representation language for the Web"""
"What is ""{language} extends RDF schema to a knowledge representation language for the Web"""	What is OWL?
rdfax rule?	Infer the triple u a x for every RDF axiomatic triple u a x<div><br></div><div>For example, rdp type is a property and is axiomatic as it is always true.</div><div><br></div><div>We can always infer all axiomatic (true) states for the language</div>
Infer the triple u a x for every RDF axiomatic triple u a x<div><br></div><div>For example, rdp type is a property and is axiomatic as it is always true.</div><div><br></div><div>We can always infer all axiomatic (true) states for the language</div>	rdfax rule?
lg, literal generalisation rule?	If Graph (G) contains a triple u a l (with a literal in place of object), then we can infer the triple u a _:n&nbsp;<div><br></div><div>By assigning a blank node to the literal.&nbsp;</div><div><br></div><div>We can infer the literal through the blank node and then map through a certain class. <b>Only applies to literals when they appear as objects within the triple</b></div>
If Graph (G) contains a triple u a l (with a literal in place of object), then we can infer the triple u a _:n&nbsp;<div><br></div><div>By assigning a blank node to the literal.&nbsp;</div><div><br></div><div>We can infer the literal through the blank node and then map through a certain class. <b>Only applies to literals when they appear as objects within the triple</b></div>	lg, literal generalisation rule?
Rdf1 rule?	If G contains a triple u a y, then we can infer a is an instance of RDF property (it is a property).<div><br></div><div>Properties are used to describe data, and used to link data to other data.&nbsp;</div><div><br></div><div>Every time we find a triple u a y we can always say whatever is in the predicate of the triple is a property.</div>
If G contains a triple u a y, then we can infer a is an instance of RDF property (it is a property).<div><br></div><div>Properties are used to describe data, and used to link data to other data.&nbsp;</div><div><br></div><div>Every time we find a triple u a y we can always say whatever is in the predicate of the triple is a property.</div>	Rdf1 rule?
Rdf2 rule?	If G contains a triple u a l, where l is a well-formed XML literal than we can infer:]<div>_:n rdf:type rdf:xmlliteral&nbsp;</div><div><br></div><div>This blank node is an identifier referring to XML literal</div>
If G contains a triple u a l, where l is a well-formed XML literal than we can infer:]<div>_:n rdf:type rdf:xmlliteral&nbsp;</div><div><br></div><div>This blank node is an identifier referring to XML literal</div>	Rdf2 rule?
RDF Entailment Therom	A graph G1 rdf-entails a graph G2 if and only if there is a graph G1' that can be derived from G1 by using the rules rdfax, lg, rdf1, and rdf2 such that G1' simply entails G1
A graph G1 rdf-entails a graph G2 if and only if there is a graph G1' that can be derived from G1 by using the rules rdfax, lg, rdf1, and rdf2 such that G1' simply entails G1	RDF Entailment Therom
What gives power to RDF?	A schema that uses RDF volcabury to describe entities to the specific domain we are considering (RDFS)
Rdfsx rule?	Infer the triple u a x for every RDFS axiomatic triple u a x
Rdfs1, literal rule	If G contains u a l, where l is a plain literal (with or without language information) then infer the triple _:n rdf:type RDFS:literal
In RDFS is everything a resource?	Yes, describing resources on the web
What is a reasoning engine?	A system that performs inference are often called reasoning engines
Can we easily work out if G1 RDFS-entails G2?	No, it is NP-complete.<div><br></div><div>But becomes polynomial if G2 contains no blank nodes</div>
"<span style=""-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"">Given the RDF graph S:</span><div><span style=""-webkit-tap-highlight-color: rgba(0, 0, 0, 0);""><br></span><div><span style=""-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"">:e rdfs:subClassOf :d .</span></div><div><span style=""-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"">:c rdf:type owl:Class .</span></div><div><span style=""-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"">:d rdfs:domain _:y .</span></div><div><span style=""-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"">:a rdfs:comment ""string"" .</span></div><div><span style=""-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"">&nbsp;:g :d :f.</span></div><div><span style=""-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"">Is the following graph RDFS-entailed by S? Explain the answer&nbsp;</span></div><div><span style=""-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"">:d rdf:type rdfs:Resource .<br></span><div><br></div></div></div>"	Yes, the triple is entailed because it can be inferred from the axiomatic triples. (In RDFS everything is a resource)
Given the graph S<div>:a rdfs:Domain :t</div><div>:u rdfs:subPropertyOf :s</div><div>:a :s :b</div><div>:a rdf:type :u</div><div>:u rdfssubClassOf :y</div><div>:t rdfssubClassOf :s</div><div>:t rdfs:Comment 'bla'</div><div><br></div><div>Is the following graph entailed by S?</div><div>:a rdf:type :t</div>	Yes, because we have triple :a :s :b which means that s is a predicate and a is the domain, and b is the range.&nbsp;<div><br></div><div>And we have this triple:</div><div>:s rdfs:domain :t</div><div><br></div><div>We apply rdfs entailment rule 2 and that allows us to state that a is of rdf type t.</div>
Given the graph G below,<div>⟨d:Poe, o:wrote, d:TheGoldBug .⟩   ⟨d:TheGoldBug, rdf:type, o:Novel .⟩  ⟨d:Baudelaire, o:translated, d:TheGoldBug .⟩</div><div> </div><div>⟨d:Poe, o:wrote, d:TheRaven .⟩  ⟨d:TheRaven,rdf:type,o:Poem .⟩ </div><div>⟨d:Mallarme ́, o:translated, d:TheRaven .⟩  </div><div>⟨d:Mallarme ́,o:wrote,_:b .⟩  ⟨_:b, rdf:type, o:Poem .⟩</div><div>&lt;o:Poem rdfs:subClassOf ex:Literature .&gt; &lt;o:Novel rdfs:subClassOf ex:Literature .&gt;</div><div><br></div><div>• And the following graph S, determine if G entails (using simple and RDFS entailment)&nbsp;</div><div>S, and explain why. </div><div>S= &lt;d:Poe wrote _:c .&gt; &lt;_:c rdf:type ex:Literature .&gt;&nbsp;</div>	Yes, it can.<div><br></div><div>It has 2 triples. The first one we want to verify was &lt;d: Poe o:wrote: something&gt; we apply to the triples 9 and 2, so we can derive that Nobel is a type of literature</div>
u a x, what is the predidicate?	a
u a x, what is the subject?	u
u a x, what is the object?	x
What are the elements of a triple in RDF?	&lt;subject, predicate, object&gt;
What are the 2 types of properties in OWL?<div>*&nbsp;<span class=cloze>[...]</span></div><div>*&nbsp;Object Properties</div>	What are the 2 types of properties in OWL?<div>*&nbsp;<span class=cloze>Datatypes</span></div><div>*&nbsp;Object Properties</div><br> 
What are the 2 types of properties in OWL?<div>*&nbsp;Datatypes</div><div>*&nbsp;<span class=cloze>[...]</span></div>	What are the 2 types of properties in OWL?<div>*&nbsp;Datatypes</div><div>*&nbsp;<span class=cloze>Object Properties</span></div><br> 
Does OWL have any predefined data types?	No, but we can use XML schema data types
<div><b>OWL</b></div><span class=cloze>[...]</span> relate&nbsp;objects to&nbsp;data type values<br>	<div><b>OWL</b></div><span class=cloze>Data type properties</span> relate&nbsp;objects to&nbsp;data type values<br><br> 
<div><b>OWL</b></div>Data type properties relate&nbsp;<span class=cloze>[...]</span> to&nbsp;data type values<br>	<div><b>OWL</b></div>Data type properties relate&nbsp;<span class=cloze>objects</span> to&nbsp;data type values<br><br> 
<div><b>OWL</b></div>Data type properties relate&nbsp;objects to&nbsp;<span class=cloze>[...]</span><br>	<div><b>OWL</b></div>Data type properties relate&nbsp;objects to&nbsp;<span class=cloze>data type values</span><br><br> 
In OWL, what is a restriction?	Allows us to build new classes from class, property, and individual names in OWL
Allows us to build new classes from class, property, and individual names in OWL	In OWL, what is a restriction?
What is existential quantification?	Find a class that contains all the objects for which at least 1 argument of this class is of a certain type.
Find a class that contains all the objects for which at least 1 argument of this class is of a certain type.	What is existential quantification?
When we use existential quantification, what sort of class do we define?	Anonymous class with no ID and only local scope - it can only be used in the place the restriction applies.
What is a universal quantification in OWL?	Define a class that consists of all objects for which all values of MotherOf are babies (as an example)
Define a class that consists of all objects for which all values of MotherOf are babies (as an example)	What is a universal quantification in OWL?
What is a cardinality restriction?	Restrictions allow us to build new classes from class, property, and individual names.<div><br></div><div>Min, max and exactly are ....</div>
Restrictions allow us to build new classes from class, property, and individual names.<div><br></div><div>Min, max and exactly are ....</div>	What is a cardinality restriction?
HasValue restriction	"&lt;owl:restriction&gt;<div>&lt;owl:hasValue rdf:resource=""Marge""/&gt;</div><div>&lt;/owl:restriction&gt;</div><div><br></div><div>Only Simpson's children's are children of Marge</div>"
"&lt;owl:restriction&gt;<div>&lt;owl:hasValue rdf:resource=""Marge""/&gt;</div><div>&lt;/owl:restriction&gt;</div><div><br></div><div>Only Simpson's children's are children of Marge</div>"	HasValue restriction
Symmetric property?	I (x, y) then (y, x)
I (x, y) then (y, x)	Symmetric property?
What is inverse property	If r(x, y) then r(y, x) == r-(x, y)
If r(x, y) then r(y, x) == r-(x, y)	What is inverse property
What is a function in OWL?	A one to one relationship from each element to the domain to only 1 element of the range
A one to one relationship from each element to the domain to only 1 element of the range	What is a function in OWL?
What is a functional property?	For every X there is at most 1 element Y that is in relationship with X&nbsp;<div>(directSupervisor)</div>
For every X there is at most 1 element Y that is in relationship with X&nbsp;<div>(directSupervisor)</div>	What is a functional property?
What is an inverse functional property?	For every element in the range y there is at most 1 element x with R(x, y)<div>(HasStudentNumber)</div>
For every element in the range y there is at most 1 element x with R(x, y)<div>(HasStudentNumber)</div>	What is an inverse functional property?
Translate into Turtle syntax the following statements, and add any axiom you think is appropriate.<div>* John is a lecturer</div><div>* Mary is an academic staff member</div><div>* Mary is 39 years old</div><div>* COMP1111 is a course</div><div>* Each course is taught by at most one staff member</div><div>* John teaches COMP1111</div><div>* Mary teaches COMP1111</div>	Individual: John<div>&nbsp; &nbsp; Class: lecturer</div><div>Individual: Mary</div><div>&nbsp; &nbsp; Class: academic staff member</div><div>Mary:2HasAge: 39</div><div>Individual: COMP1111</div><div>&nbsp; &nbsp; Class: course</div><div>&nbsp; &nbsp; IsTaughtBy: John</div><div>&nbsp; &nbsp; IsTaughtBy: Mary3</div><div>Object:property:isTaughtBy</div><div>&nbsp; &nbsp; &nbsp;Functional</div><div>&nbsp; &nbsp; &nbsp;Domain: course</div><div>&nbsp; &nbsp; &nbsp;Range: academic staff</div>
Is SPARQL declartive?	Yes
What is SPARQL based on?	RDF
SPARQL is based on&nbsp;<span class=cloze>[...]</span>	SPARQL is based on&nbsp;<span class=cloze>Pattern matching</span><br> 
How do we select a variable in SPARQL?	SELECT
Can we omit the SELECt * <b>FROM</b>&nbsp;from in this query using SPARQL?	Yes,if we use the default dataset
How are variable names prefixed in an RDF dataset graph?	?v , $v
Are blank nodes allowed in SPARQL queries?	Yes, non-selectable variables
Construct a query to return the full names of all people in the graph	"<img src=""paste-9009a10889bfdabe51e946521058f19e2998d082.jpg"">"
How do we query a relational property in SPARQL?	?p
Construct a SPARQL query to return the relation between john and mary	"<img src=""paste-b3c310ca6571175b5faabe96434b1db621d633ec.jpg"">"
How do we specify a value we do not know in SPARQL?	With a variable, such as ?y
Construct a SPARQL query to return the spouse of a person by the name of John Smith	"<img src=""paste-78cc8086b4920551402d19abcd667d3632a23b1c.jpg"">"
How do we signify a new line in a SPARQL query?	".<div><img src=""paste-288d6b48bf3f794f991ec446997511e6b8b23458.jpg""><br></div>"
Construct a SPARQL query to return the first name of all people in the knowledge base	"<img src=""paste-9a057699c3e32a93e0ec178d108f90c7b2a5191c.jpg""><div>The query selects name, and first name. And x must have vcard name ?name, and the name must havve a vcard:Given first name. So we follow the graph which has a resource with a name, and a list containing the given name.</div><div><br></div><div><br></div>"
In SPARQL, when are optional graph patterns used?	Used to treat missing data
Construct a SPARQL query to return the full name of all the people in the graph and their spouse	"<img src=""paste-4d3b5fa2cf2eee08b62b310d4f1707ca9d94b5ae.jpg""><div>We use OPTIONAL as not all people have spouses</div>"
What keyword should we always include in exploration queries?	LIMIT to avoid problems of memory &amp; resources
How do we ask for a sample of the data available?	"<img src=""paste-6022d7822125047d9761307d51fe79660e2f637e.jpg"">"
"<img src=""paste-6022d7822125047d9761307d51fe79660e2f637e.jpg"">"	How do we ask for a sample of the data available?
Construct an exploration query to find out what properties are used	"<img src=""paste-fc7f87a257a1b8ddb128a18f9bda6fae76aa8356.jpg"">"
"<img src=""paste-fc7f87a257a1b8ddb128a18f9bda6fae76aa8356.jpg"">"	Construct an exploration query to find out what properties are used
Construct a query to select resources that are persons	"<img src=""paste-5a88b8c350a273ed1a46df41e56d1d2e5aa8fd9e.jpg"">"
"<img src=""paste-5a88b8c350a273ed1a46df41e56d1d2e5aa8fd9e.jpg"">"	Construct a query to select resources that are persons
Construct an exploration query to find the labels of the various resources	"<img src=""paste-eddc829837dda135ec60957f6b7093fca9fd00d7.jpg"">"
"<img src=""paste-eddc829837dda135ec60957f6b7093fca9fd00d7.jpg"">"	Construct an exploration query to find the labels of the various resources
Construct a SPARQL query to select things that are cats	SELECT ?thing WHERE {<div>&nbsp; &nbsp; ?thing rdf:type tto:Cat .</div><div>}</div>
Construct a SPARQL query to select all people who are female	"SELECT ?thing WHERE {<div>&nbsp; &nbsp; ?thing a dbo:Person .</div><div>&nbsp; &nbsp; ?thing tto:sex ""female"" .</div><div>}</div>"
Construct a SPARQL query to select all people and their pets	SELECT ?thing WHERE {<div>&nbsp; &nbsp; ?person rdf:type dbo:Person .</div><div>&nbsp; &nbsp; ?person tto:pet ?pet .</div><div>}</div>
Construct a SPARQL query to select all pets and their owners	SELECT ?person ?pet WHERE {<div>&nbsp; &nbsp; ?pet rdf:type ?x .</div><div>&nbsp; &nbsp; ?x rdfs:subClassOf tto:Animal .</div><div>&nbsp; &nbsp; ?person tto:pet ?pet</div><div>}</div>
Construct a SPARQL query to count all pets by owner	SELECT ?owner (count(?pet) as ?count)<div>WHERE {</div><div>&nbsp; &nbsp; ?owner tto:pet ?pet .</div><div>} GROUP BY ?owner</div>
Construct a SPARQL query to select things that have a weight between 5 and 9kg, order by weight and specify the type<div>SELECT ?thing ?weight ?type WHERE{</div><div>&nbsp; &nbsp; ?thing tto:weight ?weight .</div><div>&nbsp; &nbsp; ?thing a ?type .</div><div>&nbsp; &nbsp; FILTER (?weight &gt; 5 &amp;&amp; ?weight &lt; 9.0)</div><div>} ORDER by ?weight ?type</div>	
OWL describes the world in terms of&nbsp;<span class=cloze>[...]</span>,&nbsp;classes, and&nbsp;properties	OWL describes the world in terms of&nbsp;<span class=cloze>Individuals</span>,&nbsp;classes, and&nbsp;properties<br> 
OWL describes the world in terms of&nbsp;Individuals,&nbsp;<span class=cloze>[...]</span>, and&nbsp;properties	OWL describes the world in terms of&nbsp;Individuals,&nbsp;<span class=cloze>classes</span>, and&nbsp;properties<br> 
OWL describes the world in terms of&nbsp;Individuals,&nbsp;classes, and&nbsp;<span class=cloze>[...]</span>	OWL describes the world in terms of&nbsp;Individuals,&nbsp;classes, and&nbsp;<span class=cloze>properties</span><br> 
In OWL, do different names always refer to different entities?	No, OWL uses explicit constructs to express this. Such as owl:sameAs or owl:differentFrom
How are classes defined in owl?	owl:class which is a sub-class of rdfs:class
What is owl:Thing	Class containing all individuals
What is owl:Nothing	Class containing no indivuiduals
For every class C,&nbsp;<span class=cloze>[...]</span> is a subset of C and C is a subclass of&nbsp;owl:Thing	For every class C,&nbsp;<span class=cloze>owl:nothing</span> is a subset of C and C is a subclass of&nbsp;owl:Thing<br> 
For every class C,&nbsp;owl:nothing is a subset of C and C is a subclass of&nbsp;<span class=cloze>[...]</span>	For every class C,&nbsp;owl:nothing is a subset of C and C is a subclass of&nbsp;<span class=cloze>owl:Thing</span><br> 
What is universal quantification?	Define a class that consists of all objects for which all values of X are Y
What are the 3 main cardinality restrictions of OWL?<div>*&nbsp;<span class=cloze>[...]</span></div><div>*&nbsp;Max</div><div>* exactly<br></div>	What are the 3 main cardinality restrictions of OWL?<div>*&nbsp;<span class=cloze>Min</span></div><div>*&nbsp;Max</div><div>* exactly<br></div><br> 
What are the 3 main cardinality restrictions of OWL?<div>*&nbsp;Min</div><div>*&nbsp;<span class=cloze>[...]</span></div><div>* exactly<br></div>	What are the 3 main cardinality restrictions of OWL?<div>*&nbsp;Min</div><div>*&nbsp;<span class=cloze>Max</span></div><div>* exactly<br></div><br> 
What are the 3 main cardinality restrictions of OWL?<div>*&nbsp;Min</div><div>*&nbsp;Max</div><div>* <span class=cloze>[...]</span><br></div>	What are the 3 main cardinality restrictions of OWL?<div>*&nbsp;Min</div><div>*&nbsp;Max</div><div>* <span class=cloze>exactly</span><br></div><br> 
How do we use the cardinality restriction exactly in OWL?	owl:qualifiedCardinality
What is a restriction in OWL?	Build new classes from class, property and individual names
Translate from Turtle syntax to OWL:<div>Mary is 39 years old</div><div><br></div>	The value for the property of age for Mary is 39 years old
Translate from Turtle to OWL:<div>comp111 is a course</div>	individual comp111 class:course
What is functional in ontologies?	For each individual x, there can be at most one distinct individual y that x is connected to y,<div>this means that for any given individual, the&nbsp;<b>property</b>&nbsp;can have at most one value. In other words, there can be at most one out going relationship along the&nbsp;<b>property</b>&nbsp;for that individual.<br></div>
In owl, translate from turtle:<div>maths courses are taught by mary</div>	property restriction where we assign a specific value to the property;<div><br></div><div>:mathCourse</div><div>rdf:type owl:Class</div><div>rdfs: subClassOf ([rdf:type owl:Restriction;</div><div>owl:onProperty :isTaughtBy;</div><div>owl:hasValue :mary ] ).</div>
from turtle to owl:<div>all academic staff members must teach at least one undergraduate course</div>	Cardinality on teaches<div>at least one module. If we define academic staff member that has property of teachehs where as least one of the values comes from undergraduate courses gives us a cardinality restraint.</div>
Turtle to owl:<div>an undergraduate course is taught by someone (academic staff member)</div>	minQualfieidCardinality 1;<div>own:onClass academicStaffMember</div><div><br></div><div>Restriction on isTaughtBy</div>
OWL<div>a department has at least 10 members and at most 30 members</div>	anonymous class hasMember has minimumQualfieidCardinality 10<div>hasMember has 10 individual classes</div><div><br></div><div>hasMember maxQualfiiedCardinality is 30, which means at max 30 indivuduals of the class member.</div><div><br></div><div>2 restrctions together</div>
Is RDF a data format?	No, it's a data model for describing resources in the forms of triples.
What is serialisation in RDF?	to publish a document on the web, it must be serialised using one of the RDF formats
What is Turtle in ontologies?	The plain text serialisation format for RDF
What is N-triples?	A subset of Turtle
How is N-Triples different from Turtle?	* No namespace prefixes<div>* Introduces redundancy in the serlisation format</div>
What does RDFa mean?	RDF in attributes
What is RDFa?	Serialisation of RDF embedded in XHTML, HTML, or XML in general
What does DIKW stand for?<div><span class=cloze>[...]</span>, information, knowledge, wisdom<br></div>	What does DIKW stand for?<div><span class=cloze>Data</span>, information, knowledge, wisdom<br></div><br> 
What does DIKW stand for?<div>Data, <span class=cloze>[...]</span>, knowledge, wisdom<br></div>	What does DIKW stand for?<div>Data, <span class=cloze>information</span>, knowledge, wisdom<br></div><br> 
What does DIKW stand for?<div>Data, information, <span class=cloze>[...]</span>, wisdom<br></div>	What does DIKW stand for?<div>Data, information, <span class=cloze>knowledge</span>, wisdom<br></div><br> 
What does DIKW stand for?<div>Data, information, knowledge, <span class=cloze>[...]</span><br></div>	What does DIKW stand for?<div>Data, information, knowledge, <span class=cloze>wisdom</span><br></div><br> 
What is conceptualisation?<div>The <span class=cloze>[...]</span> structure of reality as perceived and organised by an agent independnely of the volcabury used or the actual occurence of a specific situation</div>	What is conceptualisation?<div>The <span class=cloze>formal</span> structure of reality as perceived and organised by an agent independnely of the volcabury used or the actual occurence of a specific situation</div><br> 
What is conceptualisation?<div>The formal structure of <span class=cloze>[...]</span> as perceived and organised by an agent independnely of the volcabury used or the actual occurence of a specific situation</div>	What is conceptualisation?<div>The formal structure of <span class=cloze>reality</span> as perceived and organised by an agent independnely of the volcabury used or the actual occurence of a specific situation</div><br> 
What is conceptualisation?<div>The formal structure of reality as perceived and organised by an <span class=cloze>[...]</span> independnely of the volcabury used or the actual occurence of a specific situation</div>	What is conceptualisation?<div>The formal structure of reality as perceived and organised by an <span class=cloze>agent</span> independnely of the volcabury used or the actual occurence of a specific situation</div><br> 
What is conceptualisation?<div>The formal structure of reality as perceived and organised by an agent independnely of the <span class=cloze>[...]</span> used or the actual occurence of a specific situation</div>	What is conceptualisation?<div>The formal structure of reality as perceived and organised by an agent independnely of the <span class=cloze>volcabury</span> used or the actual occurence of a specific situation</div><br> 
What is conceptualisation?<div>The formal structure of reality as perceived and organised by an agent independnely of the volcabury used or the actual <span class=cloze>[...]</span> of a specific situation</div>	What is conceptualisation?<div>The formal structure of reality as perceived and organised by an agent independnely of the volcabury used or the actual <span class=cloze>occurence</span> of a specific situation</div><br> 
What is a top level ontology?	General, cross domain ontologies such as time, space, event <b>independent of a specific domain or problem.</b>
What is a domain ontology?	Fundamental concepts according to a generic domain
What is a task ontology?	Fundamental concepts according to a general activity or task
What is the Uschold &amp; King method for designing ontologies?	* Identify purpose<div>* Build ontology</div><div>* Evaluate</div><div>* Documentation</div>
What is a self standing taxonomy?	It exists in their own right
What is a modifier taxonomy?	It modieis other entities (male vs female, healthy vs sick) etc
What is ontology verification?	Checks the encoding of the specification
What is ontology validation?	Checks whether the meaning of the definitions mathces with the conceptualisation the ontology is meant to specify
LEvel of granualirty of types of ontologies:<div><span class=cloze>[...]</span>, terms / glossary, thesauri, informal is-a, formal instance, frames, value restriction, general logical constrains, disjointness inverse part of</div>	LEvel of granualirty of types of ontologies:<div><span class=cloze>Catalogue</span>, terms / glossary, thesauri, informal is-a, formal instance, frames, value restriction, general logical constrains, disjointness inverse part of</div><br> 
LEvel of granualirty of types of ontologies:<div>Catalogue, <span class=cloze>[...]</span>, thesauri, informal is-a, formal instance, frames, value restriction, general logical constrains, disjointness inverse part of</div>	LEvel of granualirty of types of ontologies:<div>Catalogue, <span class=cloze>terms / glossary</span>, thesauri, informal is-a, formal instance, frames, value restriction, general logical constrains, disjointness inverse part of</div><br> 
LEvel of granualirty of types of ontologies:<div>Catalogue, terms / glossary, <span class=cloze>[...]</span>, informal is-a, formal instance, frames, value restriction, general logical constrains, disjointness inverse part of</div>	LEvel of granualirty of types of ontologies:<div>Catalogue, terms / glossary, <span class=cloze>thesauri</span>, informal is-a, formal instance, frames, value restriction, general logical constrains, disjointness inverse part of</div><br> 
LEvel of granualirty of types of ontologies:<div>Catalogue, terms / glossary, thesauri, <span class=cloze>[...]</span>, formal instance, frames, value restriction, general logical constrains, disjointness inverse part of</div>	LEvel of granualirty of types of ontologies:<div>Catalogue, terms / glossary, thesauri, <span class=cloze>informal is-a</span>, formal instance, frames, value restriction, general logical constrains, disjointness inverse part of</div><br> 
LEvel of granualirty of types of ontologies:<div>Catalogue, terms / glossary, thesauri, informal is-a, <span class=cloze>[...]</span>, frames, value restriction, general logical constrains, disjointness inverse part of</div>	LEvel of granualirty of types of ontologies:<div>Catalogue, terms / glossary, thesauri, informal is-a, <span class=cloze>formal instance</span>, frames, value restriction, general logical constrains, disjointness inverse part of</div><br> 
LEvel of granualirty of types of ontologies:<div>Catalogue, terms / glossary, thesauri, informal is-a, formal instance, <span class=cloze>[...]</span>, value restriction, general logical constrains, disjointness inverse part of</div>	LEvel of granualirty of types of ontologies:<div>Catalogue, terms / glossary, thesauri, informal is-a, formal instance, <span class=cloze>frames</span>, value restriction, general logical constrains, disjointness inverse part of</div><br> 
LEvel of granualirty of types of ontologies:<div>Catalogue, terms / glossary, thesauri, informal is-a, formal instance, frames, <span class=cloze>[...]</span>, general logical constrains, disjointness inverse part of</div>	LEvel of granualirty of types of ontologies:<div>Catalogue, terms / glossary, thesauri, informal is-a, formal instance, frames, <span class=cloze>value restriction</span>, general logical constrains, disjointness inverse part of</div><br> 
LEvel of granualirty of types of ontologies:<div>Catalogue, terms / glossary, thesauri, informal is-a, formal instance, frames, value restriction, <span class=cloze>[...]</span>, disjointness inverse part of</div>	LEvel of granualirty of types of ontologies:<div>Catalogue, terms / glossary, thesauri, informal is-a, formal instance, frames, value restriction, <span class=cloze>general logical constrains</span>, disjointness inverse part of</div><br> 
LEvel of granualirty of types of ontologies:<div>Catalogue, terms / glossary, thesauri, informal is-a, formal instance, frames, value restriction, general logical constrains, <span class=cloze>[...]</span></div>	LEvel of granualirty of types of ontologies:<div>Catalogue, terms / glossary, thesauri, informal is-a, formal instance, frames, value restriction, general logical constrains, <span class=cloze>disjointness inverse part of</span></div><br> 
When do we say an ontology is coherent?	<div><div>Coherence sanctions inferences that are consistent with definitions</div></div>
"<div><div>Let us consider the following statements:</div><div>ex:locatedIn rdfs:domain ex:City .&nbsp;</div><div><div><div><div><div>ex:locatedIn rdfs:range ex:Country .</div></div></div></div></div></div><div><div>State if the following is true or false: ""<em>A city can be only located in a country""</em>.</div><div><br></div></div>"	True
<div><div>Which ones are not development activities in Methontology?</div></div><div>* Specification</div><div>* Maintenance</div><div>* Formalisation</div><div>* Documentation</div>	Maintenance &amp; Documentation
"<table><tbody><tr><td colspan=""2""><div><div>Given the following OWL fragment:</div><div></div><div>ex:Animal owl:equivalentClass [&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</div><div>&nbsp;&nbsp;&nbsp;owl:unionOf ( ex:Mammal ex:Bird)&nbsp;&nbsp;</div><div>].<br>ex:Simba rdf:type ex:Mammal .<br>ex:Tweety rdf:type ex:Animal .</div><div>Is the statement&nbsp;""Simba is an Animal"" correct?</div></div></td></tr></tbody></table>"	Right
<div><div>Consider the class definition&nbsp;below:</div><div><br></div><div>:MeatPizza rdf:type owl:Class ; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;owl:equivalentClass&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [ rdf:type owl:Class ;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;owl:intersectionOf ( :Pizza&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;[ rdf:type owl:Restriction ;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;owl:onProperty :hasTopping ;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;owl:someValuesFrom :MeatTopping&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; )&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ] ;</div><div><br></div><div>Can the&nbsp;:MeatPizza&nbsp;contain also have a&nbsp;:TomatoTopping?</div></div>	True
<div><div>What should I use to define a class in terms of its necessary conditions for class membership,&nbsp;rdfs:subclassOf&nbsp;or&nbsp;owl:EquivalentClass?</div></div>	rdfs:subclassOf
"<div><div>What kind of OWL construct would you use to express the fact that ""if C is a class, and r is a property, all objects connected with the given property r must be instances of the class C"".</div></div>Answers:<div>A.&nbsp;<div><div>owl:someValuesFrom C</div></div></div><div>B.&nbsp;<div><div>owl:hasValueFrom C</div></div></div><div>C.&nbsp;<div><div>owl:allValuesFrom C</div></div></div><div>D.&nbsp;<div><div>owl:EquivalentClass&nbsp;C</div></div></div>"	C.&nbsp;<div><div>owl:allValuesFrom C</div></div>
<div><div>What are advantages of ontology reuse?</div></div>A.<div><div>Saves effort</div></div>B.<div><div>Ensures replication</div></div>C.<div><div>Allows the construction of modular ontologies</div></div>D.<div><div>Supports the representation of several domains at the same time</div></div>	Saves effort &amp; Allows the construction of modular ontologies
What is interoperability?	Interoperability measures the extent to which different systems are able to meaningfully exchange information with the aim of reaching some common goal
What is syntactic interoperability?	If two or more systems are capable of communicating with each other, they exhibit syntactic interoperability when using specified data formats and communication protocols. • XML or SQL standards are among the tools of syntactic interoperability
What is semantic interopability?	the ability to automatically interpret the information exchanged meaningfully and accurately in order to produce useful results • as defined by the end users of both systems. • The meaning of the information exchanged is unambiguously defined: what is sent is the same as what is understood.
Is there such a thing as raw data?	• However, there is no such thing as raw data. • Data is always created following particular workflows, procedures, sampling strategies, • is derived using specific instrumentation, is pre-processes in specific ways.
Once we have an ontology, does data become interoperable?	"No!<div>""Actually there are already several ontologies for a domain: • Ontology alignment; • Reference ontologies;""<br></div>"
Is this true? Semantics makes my data machine-understandable, ergo my system will be intelligent	Nope! Myth!<div>It is still meta-data, machines can only interpret it. It still needs intelligent processing, decision making and reasoning to process this data<br></div>
Is this true? It’s a hype, ontologies and semantics are too much overhead. What about tiny devices?	Ontologies are a way to share and agree on a common vocabulary and knowledge in a machine interpretable and reusable format; • Semantic metadata does not need to be added in the source, it can be added to the data at a later stage (e.g. in a gateway) • Legacy applications can be extended to work with it. • And … “a little semantics goes a long way” (Jim Hendler &amp; Tim Berners Lee)
What is&nbsp;Ontology alignment?	is the process of determining correspondences between semantically related entities
